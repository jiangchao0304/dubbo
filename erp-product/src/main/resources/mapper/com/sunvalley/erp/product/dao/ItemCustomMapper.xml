<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunvalley.erp.product.dao.ItemCustomMapper">
<!-- ================================代码生成开始=2017-09-29 10:46:10=========================================== -->

    <resultMap  id="BaseResultMap" type="com.sunvalley.erp.product.model.ItemCustom">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="skuid" property="skuid" jdbcType="INTEGER"/>
        <result column="sku" property="sku" jdbcType="VARCHAR"/>
        <result column="stateid" property="stateid" jdbcType="VARCHAR"/>
        <result column="cncustomscode" property="cncustomscode" jdbcType="VARCHAR"/>
        <result column="importchecking" property="importchecking" jdbcType="TINYINT"/>
        <result column="exportchecking" property="exportchecking" jdbcType="TINYINT"/>
        <result column="commodityunit" property="commodityunit" jdbcType="VARCHAR"/>
        <result column="cncommodityname" property="cncommodityname" jdbcType="VARCHAR"/>
        <result column="refundrate" property="refundrate" jdbcType="DOUBLE"/>
        <result column="createuserid" property="createuserid" jdbcType="INTEGER"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="updateuserid" property="updateuserid" jdbcType="INTEGER"/>
        <result column="updatedate" property="updatedate" jdbcType="TIMESTAMP"/>
        <result column="category_name_id" property="categoryNameId" jdbcType="INTEGER"/>
        <result column="customs_model" property="customsModel" jdbcType="VARCHAR"/>
        <result column="item_status" property="itemStatus" jdbcType="INTEGER"/>
        <result column="sku_status" property="skuStatus" jdbcType="INTEGER"/>
        <result column="reporting_elements" property="reportingElements" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap extends="BaseResultMap" id="selectPageResult" type="com.sunvalley.erp.product.model.ItemCustom" />

    <sql id="Values">
            #{id,jdbcType=INTEGER },
            #{skuid,jdbcType=INTEGER },
            #{sku,jdbcType=VARCHAR },
            #{stateid,jdbcType=VARCHAR },
            #{cncustomscode,jdbcType=VARCHAR },
            #{importchecking,jdbcType=TINYINT },
            #{exportchecking,jdbcType=TINYINT },
            #{commodityunit,jdbcType=VARCHAR },
            #{cncommodityname,jdbcType=VARCHAR },
            #{refundrate,jdbcType=DOUBLE },
            #{createuserid,jdbcType=INTEGER },
            #{createdate,jdbcType=TIMESTAMP },
            #{updateuserid,jdbcType=INTEGER },
            #{updatedate,jdbcType=TIMESTAMP },
            #{categoryNameId,jdbcType=INTEGER },
            #{customsModel,jdbcType=VARCHAR },
            #{itemStatus,jdbcType=INTEGER },
            #{skuStatus,jdbcType=INTEGER },
            #{reportingElements,jdbcType=VARCHAR }
    </sql>

    <sql id="ValuesBatch">
            #{item.id,jdbcType=INTEGER},
            #{item.skuid,jdbcType=INTEGER},
            #{item.sku,jdbcType=VARCHAR},
            #{item.stateid,jdbcType=VARCHAR},
            #{item.cncustomscode,jdbcType=VARCHAR},
            #{item.importchecking,jdbcType=TINYINT},
            #{item.exportchecking,jdbcType=TINYINT},
            #{item.commodityunit,jdbcType=VARCHAR},
            #{item.cncommodityname,jdbcType=VARCHAR},
            #{item.refundrate,jdbcType=DOUBLE},
            #{item.createuserid,jdbcType=INTEGER},
            #{item.createdate,jdbcType=TIMESTAMP},
            #{item.updateuserid,jdbcType=INTEGER},
            #{item.updatedate,jdbcType=TIMESTAMP},
            #{item.categoryNameId,jdbcType=INTEGER},
            #{item.customsModel,jdbcType=VARCHAR},
            #{item.itemStatus,jdbcType=INTEGER},
            #{item.skuStatus,jdbcType=INTEGER},
            #{item.reportingElements,jdbcType=VARCHAR}
    </sql>

    <sql id="Set">
                id= #{id,jdbcType=INTEGER },
                skuid= #{skuid,jdbcType=INTEGER },
                sku= #{sku,jdbcType=VARCHAR },
                stateid= #{stateid,jdbcType=VARCHAR },
                cncustomscode= #{cncustomscode,jdbcType=VARCHAR },
                importchecking= #{importchecking,jdbcType=TINYINT },
                exportchecking= #{exportchecking,jdbcType=TINYINT },
                commodityunit= #{commodityunit,jdbcType=VARCHAR },
                cncommodityname= #{cncommodityname,jdbcType=VARCHAR },
                refundrate= #{refundrate,jdbcType=DOUBLE },
                createuserid= #{createuserid,jdbcType=INTEGER },
                createdate= #{createdate,jdbcType=TIMESTAMP },
                updateuserid= #{updateuserid,jdbcType=INTEGER },
                updatedate= #{updatedate,jdbcType=TIMESTAMP },
                category_name_id= #{categoryNameId,jdbcType=INTEGER },
                customs_model= #{customsModel,jdbcType=VARCHAR },
                item_status= #{itemStatus,jdbcType=INTEGER },
                sku_status= #{skuStatus,jdbcType=INTEGER },
                reporting_elements= #{reportingElements,jdbcType=VARCHAR }
    </sql>

    <sql id="SetNotNull">
                <if test="record.id != null">id= #{record.id,jdbcType=INTEGER },</if>
                <if test="record.skuid != null">skuid= #{record.skuid,jdbcType=INTEGER },</if>
                <if test="record.sku != null">sku= #{record.sku,jdbcType=VARCHAR },</if>
                <if test="record.stateid != null">stateid= #{record.stateid,jdbcType=VARCHAR },</if>
                <if test="record.cncustomscode != null">cncustomscode= #{record.cncustomscode,jdbcType=VARCHAR },</if>
                <if test="record.importchecking != null">importchecking= #{record.importchecking,jdbcType=TINYINT },</if>
                <if test="record.exportchecking != null">exportchecking= #{record.exportchecking,jdbcType=TINYINT },</if>
                <if test="record.commodityunit != null">commodityunit= #{record.commodityunit,jdbcType=VARCHAR },</if>
                <if test="record.cncommodityname != null">cncommodityname= #{record.cncommodityname,jdbcType=VARCHAR },</if>
                <if test="record.refundrate != null">refundrate= #{record.refundrate,jdbcType=DOUBLE },</if>
                <if test="record.createuserid != null">createuserid= #{record.createuserid,jdbcType=INTEGER },</if>
                <if test="record.createdate != null">createdate= #{record.createdate,jdbcType=TIMESTAMP },</if>
                <if test="record.updateuserid != null">updateuserid= #{record.updateuserid,jdbcType=INTEGER },</if>
                <if test="record.updatedate != null">updatedate= #{record.updatedate,jdbcType=TIMESTAMP },</if>
                <if test="record.categoryNameId != null">category_name_id= #{record.categoryNameId,jdbcType=INTEGER },</if>
                <if test="record.customsModel != null">customs_model= #{record.customsModel,jdbcType=VARCHAR },</if>
                <if test="record.itemStatus != null">item_status= #{record.itemStatus,jdbcType=INTEGER },</if>
                <if test="record.skuStatus != null">sku_status= #{record.skuStatus,jdbcType=INTEGER },</if>
                <if test="record.reportingElements != null">reporting_elements= #{record.reportingElements,jdbcType=VARCHAR }</if>
    </sql>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                    #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
			id,
			skuid,
			sku,
			stateid,
			cncustomscode,
			importchecking,
			exportchecking,
			commodityunit,
			cncommodityname,
			refundrate,
			createuserid,
			createdate,
			updateuserid,
			updatedate,
			category_name_id,
			customs_model,
			item_status,
			sku_status,
			reporting_elements
	</sql>


    <select id="selectByPrimaryKey"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM bs_item_custom
        WHERE id = #{id,jdbcType=INTEGER}
    </select>


    <select id="selectByExample" parameterType="com.sunvalley.erp.product.model.ItemCustomExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from bs_item_custom
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <delete id="deleteByExample" parameterType="com.sunvalley.erp.product.model.ItemCustomExample">
        delete from bs_item_custom
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>


    <insert id="insert" parameterType="ItemCustom" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO bs_item_custom
        (<include refid="Base_Column_List"></include>)
        VALUES
        (<include refid="Values"></include>)
    </insert>

    <insert id="insertSelective" parameterType="com.sunvalley.erp.product.model.ItemCustom" keyProperty="id" useGeneratedKeys="true">
        insert into bs_item_custom
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="SetNotNull" />
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="Values" />
        </trim>
    </insert>


    <select id="countByExample" parameterType="com.sunvalley.erp.product.model.ItemCustomExample" resultType="java.lang.Integer">
        select count(*) from bs_item_custom
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>


    <update id="updateByExampleSelective" parameterType="map">
        UPDATE bs_item_custom
        <set>
            <include refid="SetNotNull"></include>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>

    </update>


    <update id="updateByExample" parameterType="map">
        UPDATE bs_item_custom
        <set>
            <include refid="SetNotNull"></include>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>

    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.sunvalley.erp.product.model.ItemCustom">
        update bs_item_custom
        <set>
            <include refid="SetNotNull"></include>
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="ItemCustom">
        UPDATE bs_item_custom
        <set>
            <include refid="Set"></include>
        </set>
        WHERE id = #{id,jdbcType=INTEGER}

    </update>


    <select id="selectPage" parameterType="com.sunvalley.erp.product.model.ItemCustomExample" resultMap="selectPageResult">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from bs_item_custom
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        LIMIT ${skipRecordCount} , ${pageSize}
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO bs_item_custom
        (<include refid="Base_Column_List"></include>)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            ( <include refid="ValuesBatch"></include> )
        </foreach>
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM  bs_item_custom
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <!-- ================================代码生成结束=2017-09-29 10:46:10=========================================== -->
</mapper>
